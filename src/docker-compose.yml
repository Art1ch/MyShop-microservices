services:
  storeservice.api:
    image: ${DOCKER_REGISTRY-}storeserviceapi
    container_name: store-api
    build:
      context: .
      dockerfile: Services/StoreService/StoreService.API/Dockerfile
    ports:
      - "5002:5002"
      - "5003:5003"
    depends_on:
      - store.db

  store.db:
    image: mongo:latest
    container_name: store-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass 
    ports:
      - 27017:27017

  userservice.api:
    image: ${DOCKER_REGISTRY-}userserviceapi
    container_name: user-api
    build:
      context: .
      dockerfile: Services/UserService/UserService.API/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - user.db

  user.db:
    image: postgres:latest
    container_name: user-db
    environment:
      - POSTGRES_DB=user-database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    ports:
      - 5432:5432

  orderservice.api:
    image: ${DOCKER_REGISTRY-}orderserviceapi
    container_name: order-api
    build:
      context: .
      dockerfile: Services/OrderService/OrderService.API/Dockerfile
    ports:
      - "5004:5004"
      - "5005:5005" 
    depends_on:
      - order.db
    
  order.db:
    image: postgres:latest
    container_name: order-db
    environment:
      - POSTGRES_DB=order-database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    ports:
      - 5433:5432
   
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    ports:
        - 5672:5672
        - 15672:15672